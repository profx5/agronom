stages:
  - build
  - test

variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_TAGS: stable

## build docker image and push it to gitlab registry
build:
  stage: build
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - set -x -e -u
    - docker pull "$CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:latest" || true
    - |
      docker build \
        --cache-from "$CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:latest" \
        --tag "$CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA" \
        --tag "$CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:latest" \
        --build-arg "GIT_SHA=$CI_COMMIT_SHORT_SHA" \
        --build-arg "GIT_REF=$CI_COMMIT_REF_NAME" \
        --build-arg "GIT_COMMIT_MESSAGE=$CI_COMMIT_MESSAGE" \
        .
    - docker push $CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:latest

## Test docker image generated by build job
test:
  stage: test
  image: $CONTAINER_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
  services:
    - name: mdillon/postgis:10
      alias: postgres
    - name: rabbitmq:3.7.14
      alias: rabbit
  variables:
    # for gitlab runner to not clone repo
    GIT_STRATEGY: none
    # for postgres service
    POSTGRES_DB: test_agronom_db
    POSTGRES_USER: test_agronom_user
    POSTGRES_PASSWORD: pass
    POSTGRES_INITDB_ARGS: -E UTF-8
    # for rabbitmq service
    RABBITMQ_DEFAULT_USER: backend
    RABBITMQ_DEFAULT_PASS: password
    RABBITMQ_DEFAULT_VHOST: backend
    # for the script
    DJANGO_SETTINGS_MODULE: agronom.settings
    DJANGO_ENV: dev_docker
    ALLOWED_HOSTS: 127.0.0.1
  script:
    - cd /agronom/
    - coverage run --source . ./manage.py test -v 3
    - coverage html  # outputs to htmlcov
    - coverage report
  after_script:
    - cd /agronom/
    - cp junit.xml $CI_PROJECT_DIR
    - if [ -e htmlcov ]; then cp -R htmlcov $CI_PROJECT_DIR; fi
  coverage: '/TOTAL.+ ([0-9]+%)/'
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 week
    reports:
      junit: junit.xml
